// Generated by data binding compiler. Do not edit!
package com.evaluation.testproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.evaluation.testproject.R;
import com.evaluation.testproject.models.category.GamesResponse;
import com.evaluation.testproject.viewModels.MainVM;
import java.lang.Deprecated;
import java.lang.Integer;
import java.lang.Object;

public abstract class ItemAddressBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardContainer;

  @NonNull
  public final ConstraintLayout constLayout;

  @NonNull
  public final ImageView ivImage;

  @Bindable
  protected Integer mPosition;

  @Bindable
  protected MainVM mViewModel;

  @Bindable
  protected GamesResponse.Results mCategoryData;

  protected ItemAddressBinding(Object _bindingComponent, View _root, int _localFieldCount,
      CardView cardContainer, ConstraintLayout constLayout, ImageView ivImage) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardContainer = cardContainer;
    this.constLayout = constLayout;
    this.ivImage = ivImage;
  }

  public abstract void setPosition(@Nullable Integer position);

  @Nullable
  public Integer getPosition() {
    return mPosition;
  }

  public abstract void setViewModel(@Nullable MainVM viewModel);

  @Nullable
  public MainVM getViewModel() {
    return mViewModel;
  }

  public abstract void setCategoryData(@Nullable GamesResponse.Results categoryData);

  @Nullable
  public GamesResponse.Results getCategoryData() {
    return mCategoryData;
  }

  @NonNull
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_address, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemAddressBinding>inflateInternal(inflater, R.layout.item_address, root, attachToRoot, component);
  }

  @NonNull
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_address, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemAddressBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemAddressBinding>inflateInternal(inflater, R.layout.item_address, null, false, component);
  }

  public static ItemAddressBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemAddressBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemAddressBinding)bind(component, view, R.layout.item_address);
  }
}
